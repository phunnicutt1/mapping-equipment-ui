---
description:
globs:
alwaysApply: false
---
# Mapping Equipment UI - Project Overview

## Purpose
This is a sophisticated Equipment Point Grouping application for mapping BACnet points to equipment instances with Human-in-the-Loop capabilities. The system provides intelligent equipment detection, template creation, and celebration animations upon completion.

## Key Features
- **Smart Equipment Grouping**: Automatically groups BACnet points by equipment with confidence scoring
- **Human-in-the-Loop Workflow**: Users can confirm, flag, or modify equipment mappings
- **Template System**: Create and apply templates for similar equipment patterns
- **SkySpark Integration**: Real-time data from SkySpark BACnet servers with fallback to mock data
- **Celebration System**: Confetti animation when 100% mapping completion is achieved
- **Point Properties Tagging**: Advanced tagging system for point metadata

## Architecture
- **Frontend**: Next.js 14 with React, TypeScript, Tailwind CSS
- **State Management**: Zustand store with persistent data
- **Animations**: Framer Motion for celebrations and transitions
- **API Integration**: SkySpark Zinc format parsing and BACnet data transformation

## Main Entry Points
- [app/page.tsx](mdc:app/page.tsx) - Main application layout and data loading
- [lib/store.ts](mdc:lib/store.ts) - Central state management with all business logic
- [components/MainPanel.tsx](mdc:components/MainPanel.tsx) - Primary equipment mapping interface

## Data Flow
1. Load BACnet points from SkySpark API via [app/api/points/route.ts](mdc:app/api/points/route.ts)
2. Transform and group equipment using [lib/equipment-detection.ts](mdc:lib/equipment-detection.ts)
3. User interactions update state through Zustand store actions
4. Automatic completion detection triggers celebration via [components/SuccessCelebration.tsx](mdc:components/SuccessCelebration.tsx)
